{"version":3,"sources":["../../src/resolvers/authorization.js"],"names":["isAuthenticated","parent","args","me","skip","ForbiddenError","isAdmin","role"],"mappings":";;;;;;;AAAA;;AACA;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,IAAT;AAAA,MAAiBC,EAAjB,QAAiBA,EAAjB;AAAA,SAC3BA,EAAE,GAAGC,sBAAH,GAAU,IAAIC,4BAAJ,CAAmB,4BAAnB,CADe;AAAA,CAAxB;;;AAGA,IAAMC,OAAO,GAAG,wCACnBN,eADmB,EAEnB,UAACC,MAAD,EAASC,IAAT,SAAgC;AAAA,MAAXK,IAAW,SAAhBJ,EAAgB,CAAXI,IAAW;AAC5B,SAAOA,IAAI,KAAK,OAAT,GAAmBH,sBAAnB,GAA0B,IAAIC,4BAAJ,CAAmB,yBAAnB,CAAjC;AACH,CAJkB,CAAhB","sourcesContent":["import { ForbiddenError } from 'apollo-server';\nimport { combineResolvers, skip } from 'graphql-resolvers';\n\nexport const isAuthenticated = (parent, args, { me }) =>\n    me ? skip : new ForbiddenError('Not authenticated as user.');\n\nexport const isAdmin = combineResolvers(\n    isAuthenticated,\n    (parent, args, {me: {role}}) => {\n        return role === 'ADMIN' ? skip : new ForbiddenError('Not authorized as admin')\n    }\n);"],"file":"authorization.js"}