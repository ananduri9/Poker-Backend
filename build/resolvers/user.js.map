{"version":3,"sources":["../../src/resolvers/user.js"],"names":["createToken","user","secret","id","username","role","player","jwt","sign","generatePasswordHash","password","saltRounds","bcrypt","hash","Query","me","parent","args","models","User","findOne","_id","users","find","Mutation","signUp","venmo","UserInputError","save","console","error","token","signIn","findByLogin","validatePassword","isValid","AuthenticationError","deleteUser","findOneAndRemove","Player","ServerError"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport { UserInputError } from 'apollo-server-express';\nimport bcrypt from 'bcrypt';\n\nconst createToken = async (user, secret) => {\n    const {id, username, role, player } = user;\n    return jwt.sign({ id, username, role, player }, secret);\n};\n\nconst generatePasswordHash = async function (password) {\n    const saltRounds = 10;\n    return await bcrypt.hash(password, saltRounds);\n};\n\nexport default {\n    Query: {\n        me: async (parent, args, { me, models }) => {\n            if (!me) {\n                return null;\n            }\n\n            return await models.User.findOne({_id: me.id})\n        },\n        user: async (parent, { id }, { models }) => {\n            return await models.User.findOne({_id: id});\n        },\n        users: async (parent, args, { models }) => {\n            return await models.User.find({});\n        },\n    },\n\n    Mutation: {\n        signUp: async (\n            parent,\n            { username, password, venmo },\n            { models, secret }\n        ) => {\n            // Allow for admin users - fix this later!\n            let role = null;\n            if (username === \"ananduri\" || username === \"jmay\"){\n                role = 'ADMIN';\n            }\n\n            const user = await new models.User({\n                username,\n                password: await generatePasswordHash(password),\n                venmo: venmo,\n            });\n            if (!user) {\n                throw new UserInputError('Sign up failed.');\n            }\n\n            try {\n                await user.save();\n            } catch(err) {\n                console.error(err);\n                throw new UserInputError('Failed to update models.');\n            }\n\n            return { token: createToken(user, secret) }\n        },\n\n        signIn: async (\n            parent,\n            { username, password },\n            { models, secret },\n        ) => {\n            const user = await models.User.findByLogin(username);\n            if (!user) {\n                throw new UserInputError('No user found with this login credentials.');\n            }\n\n            const isValid = await user.validatePassword(password);\n            if (!isValid) {\n                throw new AuthenticationError('Invalid password.');\n            }\n\n            return { token: createToken(user, secret) };\n        },\n\n        deleteUser:  async (parent, { id }, { models }) => {\n            try {\n                await models.User.findOneAndRemove({_id: id});\n            } catch(err) {\n                console.error(err);\n                throw new UserInputError('Failed to delete user');\n            }\n            return true;\n        },\n    },\n\n    User: {\n        player: async (user, args, { models }) => {\n            const player = await models.Player.findOne({\n                user: user.id,\n            });\n\n            if (!player) {\n                throw new ServerError('Failed to find valid player by user id.');\n            }\n\n            return player;\n        },\n    },\n};"],"file":"user.js"}