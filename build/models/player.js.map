{"version":3,"sources":["../../src/models/player.js"],"names":["playerSchema","mongoose","Schema","stack","type","Number","required","position","betAmount","isFolded","Boolean","isAllIn","handleAllIn","hand","Object","showCards","standing","requestStanding","requestSitting","admin","user","Types","ObjectId","ref","game","Player","model"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,YAAY,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAD8B;AAKrCC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GAL2B;AASrCE,EAAAA,SAAS,EAAE;AACPJ,IAAAA,IAAI,EAAEC;AADC,GAT0B;AAYrCI,EAAAA,QAAQ,EAAE;AACNL,IAAAA,IAAI,EAAEM;AADA,GAZ2B;AAerCC,EAAAA,OAAO,EAAE;AACLP,IAAAA,IAAI,EAAEM;AADD,GAf4B;AAkBrCE,EAAAA,WAAW,EAAE;AACTR,IAAAA,IAAI,EAAEM;AADG,GAlBwB;AAqBrCG,EAAAA,IAAI,EAAE;AACFT,IAAAA,IAAI,EAAEU;AADJ,GArB+B;AAwBrCC,EAAAA,SAAS,EAAE;AACPX,IAAAA,IAAI,EAAEU;AADC,GAxB0B;AA2BrCE,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,IAAI,EAAEM;AADA,GA3B2B;AA8BrCO,EAAAA,eAAe,EAAE;AACbb,IAAAA,IAAI,EAAEM;AADO,GA9BoB;AAiCrCQ,EAAAA,cAAc,EAAE;AACZd,IAAAA,IAAI,EAAEM;AADM,GAjCqB;AAoCrCS,EAAAA,KAAK,EAAE;AACHf,IAAAA,IAAI,EAAEM;AADH,GApC8B;AAwCrCU,EAAAA,IAAI,EAAE;AAAEhB,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBmB,KAAhB,CAAsBC,QAA9B;AAAwCC,IAAAA,GAAG,EAAE;AAA7C,GAxC+B;AAyCrCC,EAAAA,IAAI,EAAE;AAAEpB,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBmB,KAAhB,CAAsBC,QAA9B;AAAwCC,IAAAA,GAAG,EAAE;AAA7C;AAzC+B,CAApB,CAArB;;AA4CA,IAAME,MAAM,GAAGxB,qBAASyB,KAAT,CAAe,QAAf,EAAyB1B,YAAzB,CAAf;;eACeyB,M","sourcesContent":["import mongoose from 'mongoose';\n\nconst playerSchema = new mongoose.Schema({\n    stack: {\n        type: Number,\n        required: true,\n    },\n    position: {\n        type: Number,\n        required: true,\n    },\n    betAmount: {\n        type: Number,\n    },\n    isFolded: {\n        type: Boolean,\n    },\n    isAllIn: {\n        type: Boolean,\n    },\n    handleAllIn: {\n        type: Boolean,\n    },\n    hand: {\n        type: Object,\n    },\n    showCards: {\n        type: Object,\n    },\n    standing: {\n        type: Boolean,\n    },\n    requestStanding: {\n        type: Boolean,\n    },\n    requestSitting: {\n        type: Boolean,\n    },\n    admin: {\n        type: Boolean,\n    },\n    \n    user: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\n    game: { type: mongoose.Schema.Types.ObjectId, ref: 'Game' }\n});\n\nconst Player = mongoose.model('Player', playerSchema);\nexport default Player;"],"file":"player.js"}