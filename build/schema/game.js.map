{"version":3,"sources":["../../src/schema/game.js"],"names":["gql"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;mBAEeA,wB,sBA8Cf;AACA;AAEA;AAEA","sourcesContent":["import { gql } from 'apollo-server-express';\n\nexport default gql`\n    extend type Query {\n        game(id: ID!): Game\n        getData(gameId: ID!): Boolean!\n    }\n\n    extend type Mutation {\n        createGame(\n            sBlind: Int!,\n            bBlind: Int!,\n        ): ID!\n        joinGame(\n            gameId: ID!\n        ): Boolean!\n        startGame(gameId: ID!): Boolean!\n\n        bet(amount: Int!, gameId: ID!): Boolean!\n        fold(gameId: ID!): Boolean!\n        allIn(gameId: ID!): Boolean!\n    }\n\n    extend type Subscription {\n        change(gameId: ID!): Game\n    }\n\n    type Game {\n        id: ID!\n        smallBlind: Int!\n        bigBlind: Int!\n        potSize: Int!\n        dealer: Int!\n        numPlayers: Int!\n        table: [Card]\n        state: String \n        curBet: Int\n\n        action: Int\n        players: [Player!]\n    }\n\n    type Card {\n        number: String!\n        suit: String!\n    }\n`;\n\n//get rid of position for bet, fold, and allin in actual\n//implementation.\n\n//can make card number and suit enums in the future\n\n//state should be an enum of {preflop, flop, turn, river}"],"file":"game.js"}